digraph {
  node [shape="box", style="rounded"]
  edge [fontcolor="red"];

  start [shape="point", width=0.1];
  unfold_into_apas [label=<unfold(<font color="blue">into_apas</font>)>];
  transform_find_hits [label=<transform(<font color="blue">find_hits</font>)>];
  filter_high_energy [label=<filter(<font color="blue">high_energy</font>)>];
  window_make_tracks [label=<window(<font color="blue">make_tracks</font>)>];
  out [label="ROOT output file(s)", shape="cylinder", style="filled", fillcolor="lightgray"];

  observe_histogram_hits [label=<observe(<font color="blue">histogram_hits</font>)>];
  transform_make_vertices [label=<transform(<font color="blue">make_vertices</font>)>];
  fold_total_energy [label=<fold(<font color="blue">sum_energy</font>)>];

  // Histogram resource
  resource [label=<Histogram<br/> resource>,
            shape=hexagon,
            style=filled,
            fillcolor=thistle,
            margin=0];
  root [label=<ROOT<br/> analysis file>, style=filled, shape=cylinder];

  gdml [label="GDML file", shape="cylinder", style="filled", fillcolor="lightgray"]
  driver [label="driver(Spill)", style="rounded,filled",fillcolor="palegreen1"];
  input [label="ROOT input files(s)", shape="cylinder", style="filled", fillcolor="lightgray"];

  // Providers
  geometry_provider [label="provide(Geometry)", style="filled,rounded", fillcolor="lightblue"];
  sim_depos_provider [label="provide(SimDepos)", style="filled,rounded" fillcolor="lightblue"];

  // Writers
  waveforms_writer [label="write(Waveforms)", style="filled,rounded", fillcolor="lightblue"];
  total_energy_writer [label="write(TotalHitEnergy)", style="filled,rounded", fillcolor="lightblue"];
  tracks_writer [label="write(GoodTracks)", style="filled,rounded", fillcolor="lightblue"];
  vertices_writer [label="write(Vertices)", style="filled,rounded", fillcolor="lightblue"];
  hits_writer [label="write(GoodHits)", style="filled,rounded" fillcolor="lightblue"];

  start -> driver [label=" Configuration", fontcolor="forestgreen"];
  driver -> input [style="dotted", arrowhead=none];
  driver -> geometry_provider [label=" [Job]", fontcolor="darkorange"];
  driver -> sim_depos_provider [label=< [Spill<sub><i>j</i></sub>]>, fontcolor="darkorange"];

  gdml -> geometry_provider [arrowhead=none, style="dotted", color="black:invis:black"];
  resource -> root [arrowhead=none, style="dotted", color="black:invis:black"];

  sim_depos_provider -> input [style="dotted", arrowhead=none];
  sim_depos_provider -> unfold_into_apas [label=< [SimDepos<sub><i>j</i></sub>]>];

  geometry_provider -> unfold_into_apas [label=<[Geometry]>];
  geometry_provider -> transform_make_vertices [taillabel=<[Geometry]>, labeldistance=4.7, labelangle=20];

  unfold_into_apas -> transform_find_hits [xlabel=<[Waveforms<sub><i>j k</i></sub>] >];
  unfold_into_apas -> waveforms_writer [label=<[Waveforms<sub><i>j k</i></sub>]>];

  transform_find_hits -> filter_high_energy [label=<[GoodHits<sub><i>j k</i></sub>]>];
  transform_find_hits -> hits_writer;
  transform_find_hits -> window_make_tracks [label=<[GoodHits<sub><i>j k</i></sub>]>];
  transform_find_hits -> fold_total_energy;

  window_make_tracks -> transform_make_vertices [label=< [GoodTracks<sub><i>j k</i></sub>]>];
  window_make_tracks -> tracks_writer;

  transform_make_vertices -> vertices_writer [label=< [Vertices<sub><i>j k</i></sub>]>];

  fold_total_energy -> total_energy_writer [label=< [TotalHitEnergy<sub><i>j</i></sub>]>];

  filter_high_energy -> observe_histogram_hits [label=<[GoodHits<sub><i>j k</i> '</sub>]>];

  resource -> observe_histogram_hits [style="dashed"];

  { total_energy_writer, waveforms_writer, hits_writer, tracks_writer, vertices_writer } -> out [style="dotted", arrowhead=none]

  // Making the graph layout better
  { rank=same; driver; input; }
  { rank=same; resource; root; }
  { rank=same; gdml; geometry_provider; sim_depos_provider; }
  { rank=same; window_make_tracks; hits_writer; fold_total_energy; filter_high_energy; }
  { rank=same; transform_make_vertices; observe_histogram_hits; tracks_writer; total_energy_writer; }

  // The following edges do not denote any formal relationships; they are intended for influencing the layout.
  edge [style="invis"]
  input -> waveforms_writer;
  filter_high_energy -> resource;
  transform_find_hits -> waveforms_writer [constraint="false"];
}
